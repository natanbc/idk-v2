plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}

dependencies {
    api project(':idk-ast')
    api project(':idk-common')
    api project(':idk-compiler')
    api project(':idk-interpreter')
    api project(':idk-ir')
    api project(':idk-parser')
    api project(':idk-runtime')
    api project(':idk-stdlib')
}

def lint = [
        "auxiliaryclass",
        "cast",
        "deprecation",
        "dep-ann",
        "divzero",
        "empty",
        "exports",
        "fallthrough",
        "finally",
        "-module",
        "opens",
        "options",
        "overloads",
        "overrides",
        "path",
        "rawtypes",
        "removal",
        "-requires-transitive-automatic",
        "static",
        "try",
        "unchecked",
        "varargs",
        "preview"
]

allprojects {
    group 'com.github.natanbc.idk'
    version '1.0-SNAPSHOT'

    sourceCompatibility = 10
    targetCompatibility = 10

    repositories {
        jcenter()
        mavenCentral()
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.incremental = true
        options.compilerArgs += ["-Xlint:${lint.join(",")}", "-Werror"]
    }
}

subprojects {
    afterEvaluate {
        javadoc {
            options.addStringOption('-module-path', classpath.asPath)
        }

        compileJava {
            inputs.property("moduleName", name)
            doFirst {
                options.compilerArgs += [
                        '--module-path', classpath.asPath,
                ]
                classpath = files()
            }
        }
    }

    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier "javadoc"
        from javadoc.destinationDir
    }

    publishing {
        publications {
            "$name"(MavenPublication) {
                from components.java
                groupId group
                artifactId name

                artifact sourceJar
                artifact javadocJar
            }
        }
    }
}

